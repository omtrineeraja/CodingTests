{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/Model/CurrencyRate.ts","webpack:///./src/app/Services/currency.service.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/currency/currency.component.html","webpack:///./src/app/currency/currency.component.scss","webpack:///./src/app/currency/currency.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","export class CurrencyRate{\r\n    \r\n    public currency:string;\r\n    public  rate:number;\r\n\r\n    constructor(currency: string = null, rate: number = null) {\r\n        this.currency= currency;\r\n        this.rate= rate;\r\n      }\r\n\r\n  \r\n}","import { Injectable } from '@angular/core';\nimport { Http, Response } from \"@angular/http\";\nimport { Observable } from \"rxjs\";\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class CurrencyService {\n\n  constructor(private http:Http) { }\n\n  currencyURL = \" https://exchangeratesapi.io/api/latest?base=\"; \n\n  currencies:string[] = [\"USD\",\"GBP\",\"EUR\",\"AUD\"];\n\n  /**\n   * Get Currencies\n   * @desc gets the list of currencies\n   * @param none\n   * @memberof CurrencyService\n   */\n  getCurrencies() :string[] \n  {\n    return this.currencies;\n  }\n\n    /**\n   * Get Currency Exchange Rate\n   * @desc gets the list of exchnages rates for provided base currency\n   * @param {string} currency\n   * @memberof CurrencyService\n   */\n   getCurrencyExchRate(currency) { \n\n   return this.http.get(this.currencyURL + currency)\n         .map((res: Response) => res.json())\n       .catch(error => Observable.throw(error.json()));\n   }\n}\n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<app-currency></app-currency>\\n<!-- <app-new-currency></app-new-currency> -->\\n\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CurrencyApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {HttpModule} from '@angular/http';\nimport {CurrencyService} from './Services/currency.service'\nimport {FormsModule , ReactiveFormsModule} from '@angular/forms'\n\n\nimport { AppComponent } from './app.component';\nimport { CurrencyComponent } from './currency/currency.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [CurrencyService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<h2 align=\\\"center\\\"> Currency Exchange Rates</h2>\\n<form [formGroup]=\\\"currencyForm\\\" (ngSubmit)=\\\"addExchangeRate(currencyForm.value)\\\" role=\\\"form\\\" class=\\\"form-inline\\\" item-width=\\\"10px\\\">\\n    <div class=\\\"form-container\\\" style=\\\"height:100\\\">\\n        <label style=\\\"font-size:1em\\\">Currency</label>\\n        <div class=\\\"form-group\\\" style=\\\"padding:20px\\\">\\n            <select formControlName=\\\"currency\\\" (change)=\\\"callCurrencyService($event.target.value)\\\">\\n                <option *ngFor=\\\"let currency of currencies\\\" value={{currency}}>\\n                    {{currency}}\\n                </option>\\n            </select>\\n        </div>\\n        <label style=\\\"font-size:1em\\\">Exchange Rate</label>\\n        <div class=\\\"form-group\\\" style=\\\"padding:30px\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"exrate\\\" pattern=\\\"^(\\\\d*\\\\.)?\\\\d+$\\\">\\n        </div>\\n        <div class=\\\"alert\\\" *ngIf=\\\"!currencyForm.controls['exrate'].valid && currencyForm.controls['exrate'].touched\\\">Provide a valid numeric rate</div>\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!currencyForm.valid\\\">Add Currency</button>\\n    </div>\\n</form>\\n<div class=\\\"form-container\\\">\\n    <div>\\n        <div *ngIf=exchangeRates>\\n            <h3>Base: {{exchangeRates.base}}</h3>\\n            <h3>Date: {{exchangeRates.date | date:\\\"M/d/yyyy\\\"}}</h3>\\n\\n            <table class=\\\"table table bordered\\\">\\n                <thead>\\n                    <tr>\\n                        <th>Currency</th>\\n                        <th>Rates</th>\\n                    </tr>\\n                </thead>\\n                <tbody *ngIf=rates>\\n                    <tr *ngFor=\\\"let cur of rates; let i = index;\\\">\\n                        <td>{{cur.currency }}</td>\\n                        <td>{{cur.rate | number : '1.2-2'}}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".form-container {\\n  display: block;\\n  width: 90%;\\n  padding: 2em;\\n  margin: 2em auto;\\n  background: #fff; }\\n\\n.alert {\\n  background: #f2edda;\\n  padding: 7px;\\n  font-size: .9em;\\n  margin-bottom: 20px;\\n  display: inline-block;\\n  -webkit-animation: 2s alertAnim forwards;\\n          animation: 2s alertAnim forwards; }\\n\\n.column {\\n  background-color: lightgrey;\\n  border: solid 5px darkgrey;\\n  border-radius: 3px;\\n  height: 200px;\\n  width: 20%; }\\n\\n.button {\\n  margin-top: 3rem; }\\n\\nh1 {\\n  margin-bottom: 2rem;\\n  font-weight: bold;\\n  font-family: 'Muli';\\n  font-size: 2em; }\\n\\nlabel {\\n  display: inline-block; }\\n\\n@-webkit-keyframes alertAnim {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n            transform: translateY(-20px); }\\n  to {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0); } }\\n\\n@keyframes alertAnim {\\n  from {\\n    opacity: 0;\\n    -webkit-transform: translateY(-20px);\\n            transform: translateY(-20px); }\\n  to {\\n    opacity: 1;\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0); } }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { CurrencyService } from '../Services/currency.service';\nimport { CurrencyRate } from '../Model/CurrencyRate'\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-currency',\n  templateUrl: './currency.component.html',\n  styleUrls: ['./currency.component.scss']\n})\nexport class CurrencyComponent implements OnInit {\n\n  id_currency: string = \"\";\n  exchangeRates: any = \"\";\n  rates: CurrencyRate[] = [];\n  currencies: string[];\n  currencyForm: FormGroup;\n  currencyRate = new CurrencyRate();\n\n\n\n  constructor(private currencyService: CurrencyService, private fb: FormBuilder) {\n    //loads the currencies in dropdown\n    this.currencies = this.currencyService.getCurrencies();\n    //loads the exchanges rates for the selected currency\n    this.id_currency=this.currencies[0];\n    this.callCurrencyService(this.id_currency);\n  }\n\n  ngOnInit() {\n    this.currencyForm = this.fb.group({\n      'currency': this.currencies[0],\n      'exrate': [null, Validators.required]\n    });\n\n  }\n\n/**\n   * call Currency Service\n   * @desc calls service method to get the exchange rates\n   * @param {string} currency\n   * @memberof CurrencyComponent\n   */\n  callCurrencyService(currency: string) {\n\n       this.id_currency = currency;\n       //fetching the data from session if its available else make an API call\n        let result= JSON.parse(this.getItem('ExchangeRates'+this.id_currency));\n        if(result)\n        {\n          this.exchangeRates=result;\n          this.parseExchangeRates(this.exchangeRates);\n          console.log(\"calling from session\");\n        }\n      else{ \n        console.log(\"calling from API\");\n       this.currencyService.getCurrencyExchRate(this.id_currency.toUpperCase())\n      .subscribe(\n        resp => {\n          this.exchangeRates = resp;\n          this.setItem('ExchangeRates' +this.id_currency,JSON.stringify(resp));\n          this.setItem('currency',this.id_currency);\n          //parsing the rates in json to array\n          this.parseExchangeRates(this.exchangeRates);\n        }\n      ),\n      error => {\n        console.log(\"Error. The callCurrencyService result JSON value is as follows:\");\n        console.log(error);\n      };\n    }\n  }\n\n/**\n   * Parse Exchange Rates\n   * @desc parses the rates json and inserts into array\n   * @param {any} exchangeRates\n   * @memberof CurrencyComponent\n   */\n   parseExchangeRates(exchangeRates: any) {\n     console.log(this.exchangeRates.rates);\n    this.rates = [];\n    for (var cu in exchangeRates.rates) {\n      if (cu) {\n        var cuVal = exchangeRates.rates[cu];\n        var parsedObject = {\n          \"rate\": cuVal,\n          \"currency\": cu\n        };\n\n        this.rates.push(parsedObject);\n        //filter the selected currency from the list\n        this.rates = this.rates.filter(obj => obj.currency != this.id_currency);\n\n      }\n    }\n  }\n\n  /**\n   * addExchangeRate\n   * @desc Add currency and exchange rate\n   * @param {post} formcontrols value\n   * @memberof CurrencyComponent\n   */\n  addExchangeRate(post) {\n    this.currencyRate.currency = post.currency;\n    this.currencyRate.rate = post.exrate;\n    this.rates.push(this.currencyRate);\n  }\n\n  /**\n   * setItem\n   * @desc stores Item in session\n   * @param {srting},{string} Key, value\n   * @memberof CurrencyComponent\n   */\n  public setItem(key:string,value:string)\n  {\n    sessionStorage.setItem(key,value);\n  }\n\n  /**\n   * getItem\n   * @desc gets Item value in session based on key\n   * @param {srting} Key\n   * @memberof CurrencyComponent\n   */\n  public getItem(key:string):string\n  {\n    return sessionStorage.getItem(key);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}